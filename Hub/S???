----------------------[ Universal Utilities ]----------------------
getgenv().Get = setmetatable({}, {__index = function(Self, Idx) return game:GetService(Idx) end})
local Players = Get.Players
local Player = Players.LocalPlayer
local Workspace = Get.Workspace
local RunService = Get.RunService
local Rep = Get.ReplicatedStorage
local HttpService = Get.HttpService
local TeleportService = Get.TeleportService
local VirtualInputManager = Get.VirtualInputManager

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Rayfield Example Window",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local TabAutoFarm = Window:CreateTab("AutoFarm", 4483362458)

local SetToggleAntiKick = false
local Toggle = TabAutoFarm:CreateToggle({
   Name = "AntiKick",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
   SetToggleAntiKick = Value
   while SetToggleAntiKick do
    wait(0.001)
    do
    local old;
    old = hookmetamethod(game, "__namecall", function(Self, ...)
        if getnamecallmethod() == "Kick" or getnamecallmethod() == "kick" and not checkcaller() then
            return
        end
        return old(Self, ...)
    end)

    spawn(function()
        while wait() do
            pcall(function()
                for _, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v.ClassName == "Script" and v:FindFirstChild("") then
                        v:Destroy()
                    end
                end
            end)
        end
    end)
end
   end
   end,
})

local SectionAutoFarm = TabAutoFarm:CreateSection("Teleport Quest")

for _,v in pairs(Workspace:GetChildren()) do
if v:IsA("Folder") then
for _v2 in pairs(v:GetChildren()) do
if  v2:FindFirstChild("QuestName") then
TabAutoFarm:CreateButton({
   Name = "Teleport Quest ["..v2.QuestName.Value.."]",
   Callback = function()
  v2:FindFirstChild("Head").CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,5)
   end,
})
end
end
else
break
end
end